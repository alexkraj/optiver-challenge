{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "opponent-layout",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setup was successful.\n"
     ]
    }
   ],
   "source": [
    "from optibook.synchronous_client import Exchange\n",
    "import time\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import logging\n",
    "logger = logging.getLogger('client')\n",
    "logger.setLevel('ERROR')\n",
    "\n",
    "print(\"Setup was successful.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "related-necessity",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2021-01-24 10:01:35,355 [asyncio   ] [MainThread  ] Using selector: EpollSelector\n"
     ]
    }
   ],
   "source": [
    "e = Exchange()\n",
    "a = e.connect()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "corresponding-teaching",
   "metadata": {},
   "outputs": [],
   "source": [
    "philips_a = 'PHILIPS_A'\n",
    "philips_b = 'PHILIPS_B'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "quiet-window",
   "metadata": {},
   "outputs": [],
   "source": [
    "def my_position():\n",
    "    # Returns all current positions with cash invested\n",
    "    positions = e.get_positions_and_cash()\n",
    "    for p in positions:\n",
    "        print(p, positions[p])\n",
    "        \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "advanced-minute",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PHILIPS_A {'volume': 0, 'cash': 0.0}\n",
      "PHILIPS_B {'volume': 0, 'cash': 0.0}\n"
     ]
    }
   ],
   "source": [
    "my_position()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "informed-finish",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Delete all outstanding orders\n",
    "def delete_outstanding(instrument):\n",
    "    outstanding = e.get_outstanding_orders(instrument)\n",
    "    for o in outstanding.values():\n",
    "        result = e.delete_order(instrument, order_id=o.order_id)\n",
    "        print(f\"Deleted order id {o.order_id}: {result}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "generous-eight",
   "metadata": {},
   "outputs": [],
   "source": [
    "# See all your outstanding orders\n",
    "def view_outstanding(instrument):\n",
    "    outstanding = e.get_outstanding_orders(instrument)\n",
    "    for o in outstanding.values():\n",
    "        print(f\"Outstanding order: order_id({o.order_id}), instrument_id({o.instrument_id}), price({o.price}), volume({o.volume}), side({o.side})\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "convinced-experiment",
   "metadata": {},
   "outputs": [],
   "source": [
    "def best_selling_price(instrument):\n",
    "    book = e.get_last_price_book(instrument)\n",
    "    best = book.bids[0].price\n",
    "    return best\n",
    "\n",
    "def best_buying_price(instrument):\n",
    "    book = e.get_last_price_book(instrument)\n",
    "    best = book.asks[0].price\n",
    "    return best\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 340,
   "id": "sexual-wings",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Deleted order id 261036: True\n"
     ]
    }
   ],
   "source": [
    "delete_outstanding(philips_a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "former-leadership",
   "metadata": {},
   "outputs": [],
   "source": [
    "view_outstanding(philips_a)\n",
    "view_outstanding(philips_b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "material-number",
   "metadata": {},
   "outputs": [],
   "source": [
    "def average_a(timesteps):\n",
    "    # Returns all public tradeticks since the instantiation of the Exchange\n",
    "    tradeticks = e.get_trade_tick_history(philips_a)\n",
    "    prices = []\n",
    "    for t in tradeticks[-timesteps:]:\n",
    "        if t.price<100:\n",
    "            prices.append(t.price)\n",
    "\n",
    "    return np.mean(prices)\n",
    "\n",
    "def average_b(timesteps):\n",
    "    # Returns all public tradeticks since the instantiation of the Exchange\n",
    "    tradeticks = e.get_trade_tick_history(philips_b)\n",
    "    prices = []\n",
    "    for t in tradeticks[-timesteps:]:\n",
    "        if t.price<100:\n",
    "            prices.append(t.price)\n",
    "\n",
    "    return np.mean(prices)\n",
    "\n",
    "def get_range_b(timesteps):\n",
    "    tradeticks = e.get_trade_tick_history(philips_b)\n",
    "    prices = []\n",
    "    for t in tradeticks[-timesteps:]:\n",
    "        if t.price<100:\n",
    "            prices.append(t.price)\n",
    "    return [np.percentile(prices, 99), np.mean(prices), np.percentile(prices, 1)]\n",
    "    \n",
    "def get_range_a(timesteps):\n",
    "    tradeticks = e.get_trade_tick_history(philips_a)\n",
    "    prices = []\n",
    "    for t in tradeticks[-timesteps:]:\n",
    "        if t.price<100:\n",
    "            prices.append(t.price)\n",
    "    return [np.percentile(prices, 99), np.mean(prices), np.percentile(prices, 1)]\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "enabling-cabin",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[99.9, 99.70882352941177, 99.43299999999999]\n"
     ]
    }
   ],
   "source": [
    "average_a(6000)\n",
    "print(get_range_b(10000))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "competitive-yacht",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "american-alexandria",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PHILIPS_A {'volume': -2, 'cash': -5222.699999999953}\n",
      "PHILIPS_B {'volume': -36, 'cash': -11866.100000000002}\n",
      "67.15200927019109\n",
      "68.5\n",
      "PHILIPS_A {'volume': -2, 'cash': -5222.699999999953}\n",
      "PHILIPS_B {'volume': -36, 'cash': -11866.100000000002}\n"
     ]
    }
   ],
   "source": [
    "my_position()\n",
    "print(np.mean(bought_prices))\n",
    "print(best_selling_price(philips_a))\n",
    "my_position()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "enabling-blink",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-2\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "357008"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#current_position = e.get_positions_and_cash()\n",
    "#volume_left = current_position[philips_a]['volume']\n",
    "#print(volume_left)\n",
    "#best_sell = best_buying_price(philips_b)\n",
    "#e.insert_order(philips_b, price=best_sell, volume=200, order_type='limit', side='bid')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "bibliographic-blood",
   "metadata": {},
   "outputs": [],
   "source": [
    "bought_prices = [average_b(200)+0.5]\n",
    "weighted_prices_a = [average_a(3)]\n",
    "\n",
    "weighted_prices_b = [average_b(3)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "effective-jenny",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Selling 1 B at price 68.2\n",
      "Selling 1 B at price 68.2\n",
      "Buying  1 A at price 68.2\n",
      "Selling 1 B at price 68.2\n",
      "Buying  1 A at price 68.10000000000001\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 67.9\n",
      "Buying 6 B at price 68.0 ****** Expect to sell at 68.10000000000001\n",
      "Buying  1 A at price 67.8\n",
      "Buying 9 B at price 67.9 ****** Expect to sell at 68.01428571428572\n",
      "New PNL : 37.0\n",
      "Updated Weights A=67.8 B=67.95\n",
      "\n",
      "Buying  1 A at price 67.7\n",
      "Buying 7 B at price 67.9 ****** Expect to sell at 67.95\n",
      "Buying  1 A at price 67.7\n",
      "Buying 9 B at price 67.8 ****** Expect to sell at 67.93478260869566\n",
      "Buying  1 A at price 67.7\n",
      "Buying 9 B at price 67.8 ****** Expect to sell at 67.896875\n",
      "Buying 5 B at price 67.8 ****** Expect to sell at 67.87560975609755\n",
      "Buying 5 B at price 67.8 ****** Expect to sell at 67.8673913043478\n",
      "Buying 5 B at price 67.8 ****** Expect to sell at 67.86078431372549\n",
      "New PNL : -7.299999999999272\n",
      "Updated Weights A=67.7107142857143 B=67.85535714285713\n",
      "\n",
      "Buying 5 B at price 67.8 ****** Expect to sell at 67.85535714285713\n",
      "Selling 20 B at price 67.9\n",
      "Selling 1 A at price 67.8 ****** Expect to buy at 67.7107142857143\n",
      "Selling 1 A at price 67.8 ****** Expect to buy at 67.71379310344828\n",
      "Selling 1 A at price 67.8 ****** Expect to buy at 67.71666666666667\n",
      "Selling 1 A at price 67.8 ****** Expect to buy at 67.71935483870968\n",
      "Selling 1 A at price 67.8 ****** Expect to buy at 67.721875\n",
      "Selling 1 A at price 67.8 ****** Expect to buy at 67.72424242424242\n",
      "Selling 1 A at price 67.8 ****** Expect to buy at 67.72647058823527\n",
      "New PNL : -2.7000000000007276\n",
      "Updated Weights A=67.7285714285714 B=67.81803278688523\n",
      "\n",
      "Selling 1 A at price 67.8 ****** Expect to buy at 67.7285714285714\n",
      "Selling 5 A at price 68.10000000000001 ****** Expect to buy at 67.73055555555554\n",
      "Selling 1 B at price 67.9\n",
      "Selling 5 A at price 68.10000000000001 ****** Expect to buy at 67.77560975609755\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 5 A at price 68.10000000000001 ****** Expect to buy at 67.81086956521736\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 5 A at price 68.10000000000001 ****** Expect to buy at 67.8392156862745\n",
      "Selling 1 B at price 67.9\n",
      "New PNL : -17.5\n",
      "Updated Weights A=67.8625 B=67.83770491803278\n",
      "\n",
      "Selling 10 A at price 68.3 ****** Expect to buy at 67.8625\n",
      "Selling 1 B at price 68.2\n",
      "Selling 10 A at price 68.3 ****** Expect to buy at 67.92878787878787\n",
      "Selling 1 B at price 68.3\n",
      "Selling 10 A at price 68.3 ****** Expect to buy at 67.97763157894737\n",
      "Selling 1 B at price 68.3\n",
      "Selling 10 A at price 68.3 ****** Expect to buy at 68.01511627906977\n",
      "Selling 1 B at price 68.3\n",
      "Selling 10 A at price 68.3 ****** Expect to buy at 68.04479166666668\n",
      "Selling 1 B at price 68.2\n",
      "Selling 7 A at price 68.2 ****** Expect to buy at 68.0688679245283\n",
      "Selling 1 B at price 68.3\n",
      "Selling 7 A at price 68.2 ****** Expect to buy at 68.0769911504425\n",
      "Selling 1 B at price 68.3\n",
      "Selling 4 A at price 68.10000000000001 ****** Expect to buy at 68.08416666666669\n",
      "Selling 1 B at price 68.2\n",
      "Selling 4 A at price 68.10000000000001 ****** Expect to buy at 68.08467741935486\n",
      "Selling 1 B at price 68.2\n",
      "Selling 4 A at price 68.10000000000001 ****** Expect to buy at 68.08515625\n",
      "Selling 1 B at price 68.2\n",
      "Selling 4 A at price 68.10000000000001 ****** Expect to buy at 68.08560606060605\n",
      "Selling 1 B at price 68.2\n",
      "Selling 4 A at price 68.2 ****** Expect to buy at 68.08602941176471\n",
      "Selling 1 B at price 68.2\n",
      "Selling 2 A at price 68.10000000000001 ****** Expect to buy at 68.08928571428571\n",
      "Selling 1 B at price 68.2\n",
      "Selling 2 A at price 68.10000000000001 ****** Expect to buy at 68.08943661971831\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 1 A at price 68.10000000000001 ****** Expect to buy at 68.08958333333334\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "Buying 2 B at price 67.9 ****** Expect to sell at 67.93934426229508\n",
      "New PNL : 91.70000000000437\n",
      "Updated Weights A=68.08758620689656 B=67.93809523809524\n",
      "\n",
      "Buying  1 A at price 67.9\n",
      "Buying 2 B at price 67.9 ****** Expect to sell at 67.93809523809524\n",
      "Buying  1 A at price 67.9\n",
      "Buying  1 A at price 67.9\n",
      "Buying 2 B at price 67.9 ****** Expect to sell at 67.93692307692308\n",
      "Buying  1 A at price 68.0\n",
      "Buying 2 B at price 67.9 ****** Expect to sell at 67.93582089552238\n",
      "Buying  1 A at price 68.0\n",
      "Buying 2 B at price 67.9 ****** Expect to sell at 67.93478260869566\n",
      "New PNL : -45.89999999999782\n",
      "Updated Weights A=68.07533333333333 B=67.93380281690142\n",
      "\n",
      "Buying  1 A at price 68.0\n",
      "Buying 2 B at price 67.9 ****** Expect to sell at 67.93380281690142\n",
      "Buying  1 A at price 67.9\n",
      "Buying 5 B at price 67.8 ****** Expect to sell at 67.93287671232878\n",
      "Buying  1 A at price 67.8\n",
      "Buying 5 B at price 67.8 ****** Expect to sell at 67.92435897435898\n",
      "Buying  1 A at price 67.8\n",
      "Buying 5 B at price 67.8 ****** Expect to sell at 67.91686746987952\n",
      "Buying  1 A at price 67.9\n",
      "Buying 3 B at price 67.9 ****** Expect to sell at 67.91022727272727\n",
      "Buying  1 A at price 67.9\n",
      "Buying 3 B at price 67.9 ****** Expect to sell at 67.9098901098901\n",
      "Selling 2 A at price 68.2 ****** Expect to buy at 68.0457831325301\n",
      "Selling 2 A at price 68.2 ****** Expect to buy at 68.04761904761904\n",
      "Selling 9 B at price 68.10000000000001\n",
      "Selling 2 A at price 68.2 ****** Expect to buy at 68.04941176470587\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 1 A at price 68.10000000000001 ****** Expect to buy at 68.05116279069766\n",
      "Selling 1 B at price 68.10000000000001\n",
      "New PNL : -8.600000000002183\n",
      "Updated Weights A=68.05144508670519 B=67.94893617021276\n",
      "\n",
      "Selling 1 A at price 68.10000000000001 ****** Expect to buy at 68.05144508670519\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 1 A at price 68.10000000000001 ****** Expect to buy at 68.05172413793102\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 1 A at price 68.10000000000001 ****** Expect to buy at 68.05199999999996\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 1 A at price 68.10000000000001 ****** Expect to buy at 68.05227272727271\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 1 A at price 68.10000000000001 ****** Expect to buy at 68.05254237288135\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 1 A at price 68.10000000000001 ****** Expect to buy at 68.05280898876403\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 1 A at price 68.10000000000001 ****** Expect to buy at 68.0530726256983\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "New PNL : 15.900000000008731\n",
      "Updated Weights A=68.05333333333333 B=67.97978723404256\n",
      "\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "New PNL : -17.200000000004366\n",
      "Updated Weights A=68.05333333333333 B=67.98829787234044\n",
      "\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Selling 1 B at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "New PNL : 17.30000000000291\n",
      "Updated Weights A=68.05222222222221 B=67.9904255319149\n",
      "\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 67.9\n",
      "Buying 4 B at price 67.9 ****** Expect to sell at 67.9904255319149\n",
      "Buying  1 A at price 67.9\n",
      "Buying  1 A at price 67.9\n",
      "Buying  1 A at price 67.9\n",
      "Buying  1 A at price 67.9\n",
      "Buying  1 A at price 67.9\n",
      "Buying  1 A at price 67.9\n",
      "New PNL : 17.700000000004366\n",
      "Updated Weights A=68.02979797979796 B=67.98673469387755\n",
      "\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 67.9\n",
      "Buying  1 A at price 67.9\n",
      "Buying  1 A at price 67.9\n",
      "Buying  1 A at price 67.8\n",
      "Buying 4 B at price 67.9 ****** Expect to sell at 67.98673469387755\n",
      "Buying  1 A at price 67.9\n",
      "Buying 4 B at price 67.9 ****** Expect to sell at 67.98333333333333\n",
      "Buying  1 A at price 67.9\n",
      "Buying 4 B at price 67.9 ****** Expect to sell at 67.98018867924529\n",
      "Buying  1 A at price 67.9\n",
      "Buying 4 B at price 67.9 ****** Expect to sell at 67.97727272727273\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "New PNL : 12.799999999999272\n",
      "Updated Weights A=68.00329218106997 B=67.97456140350879\n",
      "\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 68.0\n",
      "Buying  1 A at price 67.9\n",
      "Buying 4 B at price 67.9 ****** Expect to sell at 67.97456140350879\n",
      "Buying 4 B at price 67.9 ****** Expect to sell at 67.97203389830509\n",
      "Buying  1 A at price 67.9\n",
      "Buying 10 B at price 67.8 ****** Expect to sell at 67.96967213114755\n",
      "New PNL : -1.8000000000029104\n",
      "Updated Weights A=67.99540229885058 B=67.95681818181818\n",
      "\n",
      "Buying  1 A at price 67.9\n",
      "Buying 4 B at price 67.9 ****** Expect to sell at 67.95681818181818\n",
      "Buying  1 A at price 67.9\n",
      "Buying  1 A at price 67.9\n",
      "Buying  1 A at price 67.9\n",
      "Buying 4 B at price 67.9 ****** Expect to sell at 67.95514705882353\n",
      "Buying 4 B at price 67.9 ****** Expect to sell at 67.95357142857142\n",
      "Selling 2 A at price 68.0 ****** Expect to buy at 67.98494623655913\n",
      "Selling 3 A at price 68.0 ****** Expect to buy at 67.9850533807829\n",
      "New PNL : -20.600000000002183\n",
      "Updated Weights A=67.98521126760562 B=67.95208333333332\n",
      "\n",
      "Buying 4 B at price 67.9 ****** Expect to sell at 67.95208333333332\n",
      "Selling 10 A at price 68.10000000000001 ****** Expect to buy at 67.98521126760562\n",
      "Selling 10 A at price 68.10000000000001 ****** Expect to buy at 67.98911564625848\n",
      "Selling 24 B at price 68.0\n",
      "Selling 10 A at price 68.2 ****** Expect to buy at 67.99276315789473\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 10 A at price 68.2 ****** Expect to buy at 67.99936305732484\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 7 A at price 68.3 ****** Expect to buy at 68.00555555555556\n",
      "Selling 1 B at price 68.2\n",
      "Selling 10 A at price 68.4 ****** Expect to buy at 68.01178247734138\n",
      "Selling 1 B at price 68.3\n",
      "Selling 10 A at price 68.4 ****** Expect to buy at 68.02316715542523\n",
      "Selling 1 B at price 68.3\n",
      "Selling 9 A at price 68.4 ****** Expect to buy at 68.03390313390312\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 10 A at price 68.5 ****** Expect to buy at 68.04305555555555\n",
      "Selling 1 B at price 68.3\n",
      "Selling 1 B at price 68.2\n",
      "New PNL : -98.20000000000437\n",
      "Updated Weights A=68.05540540540541 B=68.01486486486488\n",
      "\n",
      "Selling 1 B at price 68.2\n",
      "Selling 1 B at price 68.10000000000001\n",
      "Selling 1 B at price 68.4\n",
      "Selling 1 B at price 68.5\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "New PNL : -44.59999999999127\n",
      "Updated Weights A=68.05540540540541 B=68.06351351351351\n",
      "\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.5\n",
      "Selling 1 B at price 68.4\n",
      "Selling 1 B at price 68.4\n",
      "Selling 1 B at price 68.5\n",
      "New PNL : -3.6999999999970896\n",
      "Updated Weights A=68.05540540540541 B=68.1141891891892\n",
      "\n",
      "Selling 1 B at price 68.60000000000001\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.8\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "New PNL : -44.70000000000073\n",
      "Updated Weights A=68.05540540540541 B=68.17364864864865\n",
      "\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.8\n",
      "Selling 1 B at price 68.8\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "New PNL : -0.40000000000509317\n",
      "Updated Weights A=68.05540540540541 B=68.23851351351351\n",
      "\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "New PNL : 0.0\n",
      "Updated Weights A=68.05540540540541 B=68.31283783783783\n",
      "\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "New PNL : -7.275957614183426e-12\n",
      "Updated Weights A=68.05540540540541 B=68.38310810810812\n",
      "\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.8\n",
      "New PNL : 7.099999999998545\n",
      "Updated Weights A=68.05540540540541 B=68.42432432432432\n",
      "\n",
      "Selling 1 B at price 68.5\n",
      "Selling 1 B at price 68.5\n",
      "Selling 1 B at price 68.5\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.8\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "New PNL : 11.89999999999418\n",
      "Updated Weights A=68.05540540540541 B=68.47297297297295\n",
      "\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "New PNL : 38.200000000004366\n",
      "Updated Weights A=68.05540540540541 B=68.51891891891891\n",
      "\n",
      "Selling 1 B at price 68.7\n",
      "Buying 10 B at price 68.5 ****** Expect to sell at 68.52162162162162\n",
      "Buying 10 B at price 68.5 ****** Expect to sell at 68.52025316455696\n",
      "Buying 9 B at price 68.5 ****** Expect to sell at 68.51904761904763\n",
      "Buying 7 B at price 68.5 ****** Expect to sell at 68.5180790960452\n",
      "Selling 1 B at price 68.60000000000001\n",
      "Selling 1 B at price 68.60000000000001\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "New PNL : -116.59999999999854\n",
      "Updated Weights A=68.05540540540541 B=68.52826086956522\n",
      "\n",
      "Selling 1 B at price 68.8\n",
      "Selling 1 B at price 68.8\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "New PNL : -32.60000000000582\n",
      "Updated Weights A=68.05540540540541 B=68.55217391304348\n",
      "\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "New PNL : -7.400000000001455\n",
      "Updated Weights A=68.05540540540541 B=68.575\n",
      "\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 68.60000000000001\n",
      "Selling 1 B at price 68.60000000000001\n",
      "Selling 1 B at price 68.60000000000001\n",
      "Selling 1 B at price 68.60000000000001\n",
      "Selling 1 B at price 68.60000000000001\n",
      "Selling 1 B at price 68.60000000000001\n",
      "New PNL : 243.1999999999971\n",
      "Updated Weights A=68.05540540540541 B=68.59021739130435\n",
      "\n",
      "Buying 7 B at price 68.5 ****** Expect to sell at 68.59021739130435\n",
      "Buying 7 B at price 68.5 ****** Expect to sell at 68.5869109947644\n",
      "Buying 7 B at price 68.5 ****** Expect to sell at 68.58383838383838\n",
      "Buying 7 B at price 68.5 ****** Expect to sell at 68.5809756097561\n",
      "Buying 7 B at price 68.5 ****** Expect to sell at 68.57830188679245\n",
      "Buying 5 B at price 68.5 ****** Expect to sell at 68.57579908675798\n",
      "Buying 5 B at price 68.5 ****** Expect to sell at 68.57410714285713\n",
      "Buying 5 B at price 68.5 ****** Expect to sell at 68.57248908296943\n",
      "Buying 5 B at price 68.5 ****** Expect to sell at 68.57094017094016\n",
      "New PNL : 3.400000000005093\n",
      "Updated Weights A=68.05540540540541 B=68.56945606694562\n",
      "\n",
      "Buying 5 B at price 68.5 ****** Expect to sell at 68.56945606694562\n",
      "Buying 5 B at price 68.5 ****** Expect to sell at 68.56803278688524\n",
      "Buying 7 B at price 68.4 ****** Expect to sell at 68.56666666666668\n",
      "Buying 7 B at price 68.4 ****** Expect to sell at 68.562109375\n",
      "Buying 5 B at price 68.5 ****** Expect to sell at 68.55779467680607\n",
      "Buying 5 B at price 68.5 ****** Expect to sell at 68.55671641791045\n",
      "Buying 5 B at price 68.5 ****** Expect to sell at 68.55567765567764\n",
      "Buying 5 B at price 68.5 ****** Expect to sell at 68.5546762589928\n",
      "Buying 5 B at price 68.5 ****** Expect to sell at 68.55371024734983\n",
      "New PNL : 22.0\n",
      "Updated Weights A=68.05540540540541 B=68.55277777777776\n",
      "\n",
      "Buying 5 B at price 68.5 ****** Expect to sell at 68.55277777777776\n",
      "Buying 7 B at price 68.4 ****** Expect to sell at 68.5518771331058\n",
      "Buying 7 B at price 68.4 ****** Expect to sell at 68.54833333333333\n",
      "Buying 7 B at price 68.4 ****** Expect to sell at 68.54495114006515\n",
      "Buying 7 B at price 68.4 ****** Expect to sell at 68.54171974522292\n",
      "Buying 7 B at price 68.4 ****** Expect to sell at 68.5386292834891\n",
      "Buying 7 B at price 68.4 ****** Expect to sell at 68.53567073170731\n",
      "Buying 4 B at price 68.5 ****** Expect to sell at 68.53283582089553\n",
      "Buying 4 B at price 68.5 ****** Expect to sell at 68.53244837758112\n",
      "New PNL : 4.199999999993452\n",
      "Updated Weights A=68.05540540540541 B=68.53206997084548\n",
      "\n",
      "Buying 4 B at price 68.5 ****** Expect to sell at 68.53206997084548\n",
      "Buying 4 B at price 68.5 ****** Expect to sell at 68.53170028818444\n",
      "Buying 4 B at price 68.5 ****** Expect to sell at 68.53133903133903\n",
      "Buying 4 B at price 68.5 ****** Expect to sell at 68.53098591549296\n",
      "Buying 3 B at price 68.5 ****** Expect to sell at 68.53064066852367\n",
      "Buying 3 B at price 68.5 ****** Expect to sell at 68.5303867403315\n",
      "Buying 6 B at price 68.4 ****** Expect to sell at 68.53013698630137\n",
      "Buying 6 B at price 68.4 ****** Expect to sell at 68.52803234501349\n",
      "Buying 6 B at price 68.4 ****** Expect to sell at 68.5259946949602\n",
      "New PNL : 9.099999999998545\n",
      "Updated Weights A=68.05540540540541 B=68.52402088772845\n",
      "\n",
      "Buying 7 B at price 68.3 ****** Expect to sell at 68.52402088772845\n",
      "Buying 5 B at price 68.3 ****** Expect to sell at 68.51999999999998\n",
      "Buying 7 B at price 68.2 ****** Expect to sell at 68.51721518987341\n",
      "Buying 10 B at price 68.10000000000001 ****** Expect to sell at 68.51169154228855\n",
      "Buying 4 B at price 68.3 ****** Expect to sell at 68.5016990291262\n",
      "Buying 4 B at price 68.3 ****** Expect to sell at 68.4997596153846\n",
      "Buying 4 B at price 68.3 ****** Expect to sell at 68.49785714285714\n",
      "Buying 1 B at price 68.4 ****** Expect to sell at 68.49599056603772\n",
      "Buying 6 B at price 68.2 ****** Expect to sell at 68.49576470588235\n",
      "New PNL : 2.8999999999941792\n",
      "Updated Weights A=68.05540540540541 B=68.49164733178652\n",
      "\n",
      "Buying 6 B at price 68.2 ****** Expect to sell at 68.49164733178652\n",
      "Buying 6 B at price 68.2 ****** Expect to sell at 68.48764302059496\n",
      "Buying 6 B at price 68.2 ****** Expect to sell at 68.48374717832957\n",
      "Buying 5 B at price 68.2 ****** Expect to sell at 68.47995545657015\n",
      "Buying 5 B at price 68.2 ****** Expect to sell at 68.47687224669603\n",
      "Buying 5 B at price 68.2 ****** Expect to sell at 68.47385620915033\n",
      "Buying 3 B at price 68.2 ****** Expect to sell at 68.4709051724138\n",
      "Buying 3 B at price 68.2 ****** Expect to sell at 68.46916488222699\n",
      "Selling 200 B at price 68.5\n",
      "New PNL : -6.299999999995634\n",
      "Updated Weights A=68.05540540540541 B=68.53234042553191\n",
      "\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53234042553191\n",
      "Buying 1 B at price 68.4 ****** Expect to sell at 68.53227176220807\n",
      "Buying 1 B at price 68.4 ****** Expect to sell at 68.53199152542372\n",
      "Buying 1 B at price 68.4 ****** Expect to sell at 68.53171247357294\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53143459915613\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53136842105263\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53130252100841\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53123689727464\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53117154811716\n",
      "New PNL : 3.999999999992724\n",
      "Updated Weights A=68.05540540540541 B=68.53110647181629\n",
      "\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53110647181629\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53104166666665\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53097713097712\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53091286307053\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53084886128364\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53078512396694\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53072164948452\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53065843621398\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53059548254619\n",
      "New PNL : 16.900000000001455\n",
      "Updated Weights A=68.05540540540541 B=68.53053278688525\n",
      "\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53053278688525\n",
      "Buying 1 B at price 68.4 ****** Expect to sell at 68.53047034764825\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53020408163266\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53014256619146\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53008130081301\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.53002028397565\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.52995951417005\n",
      "Buying 1 B at price 68.4 ****** Expect to sell at 68.529898989899\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.52963709677418\n",
      "New PNL : -20.400000000001455\n",
      "Updated Weights A=68.05540540540541 B=68.52957746478873\n",
      "\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.52957746478873\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.52951807228916\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.52945891783567\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.5294\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.52934131736527\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.5292828685259\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.52922465208746\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.52916666666665\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.52910891089108\n",
      "New PNL : -37.60000000000218\n",
      "Updated Weights A=68.05540540540541 B=68.5290513833992\n",
      "\n",
      "Selling 36 B at price 68.60000000000001\n",
      "Selling 3 B at price 68.60000000000001\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.60000000000001\n",
      "Selling 1 B at price 68.60000000000001\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.7\n",
      "New PNL : -63.299999999995634\n",
      "Updated Weights A=68.05540540540541 B=68.54130434782608\n",
      "\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.60000000000001\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 68.8\n",
      "Selling 1 B at price 68.9\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "New PNL : -44.5\n",
      "Updated Weights A=68.05540540540541 B=68.55217391304348\n",
      "\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 68.8\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "New PNL : -0.2000000000007276\n",
      "Updated Weights A=68.05540540540541 B=68.56146245059288\n",
      "\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "New PNL : 0.0\n",
      "Updated Weights A=68.05540540540541 B=68.57035573122529\n",
      "\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 68.7\n",
      "Selling 1 B at price 69.0\n",
      "New PNL : -0.09999999999854481\n",
      "Updated Weights A=68.05540540540541 B=68.58201581027669\n",
      "\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.4\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.3\n",
      "New PNL : -117.19999999999709\n",
      "Updated Weights A=68.05540540540541 B=68.60000000000001\n",
      "\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.2\n",
      "New PNL : 108.89999999999418\n",
      "Updated Weights A=68.05540540540541 B=68.61383399209487\n",
      "\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.5\n",
      "Selling 1 B at price 69.5\n",
      "Selling 1 B at price 69.2\n",
      "New PNL : -61.49999999999636\n",
      "Updated Weights A=68.05540540540541 B=68.62905138339922\n",
      "\n",
      "Selling 1 B at price 69.4\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.4\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "New PNL : -89.99999999999636\n",
      "Updated Weights A=68.05540540540541 B=68.64426877470356\n",
      "\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "New PNL : 82.39999999999418\n",
      "Updated Weights A=68.05540540540541 B=68.66146245059288\n",
      "\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "New PNL : 30.19999999999709\n",
      "Updated Weights A=68.05540540540541 B=68.68359683794465\n",
      "\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.2\n",
      "New PNL : 0.6000000000058208\n",
      "Updated Weights A=68.05540540540541 B=68.70652173913044\n",
      "\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.3\n",
      "Selling 1 B at price 69.3\n",
      "New PNL : -155.8000000000029\n",
      "Updated Weights A=68.05540540540541 B=68.73399209486166\n",
      "\n",
      "Selling 1 B at price 69.4\n",
      "Selling 1 B at price 69.5\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.9\n",
      "Selling 1 B at price 69.4\n",
      "Selling 1 B at price 70.0\n",
      "Selling 1 B at price 70.10000000000001\n",
      "New PNL : -44.099999999998545\n",
      "Updated Weights A=68.05540540540541 B=68.76956521739129\n",
      "\n",
      "Selling 1 B at price 70.0\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.7\n",
      "New PNL : 17.5\n",
      "Updated Weights A=68.05540540540541 B=68.79960474308301\n",
      "\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "New PNL : -13.5\n",
      "Updated Weights A=68.05540540540541 B=68.82806324110672\n",
      "\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.7\n",
      "New PNL : 15.099999999998545\n",
      "Updated Weights A=68.05540540540541 B=68.85553359683794\n",
      "\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "New PNL : 15.5\n",
      "Updated Weights A=68.05540540540541 B=68.87470355731224\n",
      "\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "New PNL : 0.0\n",
      "Updated Weights A=68.05540540540541 B=68.89189723320159\n",
      "\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.60000000000001\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.7\n",
      "New PNL : 3.099999999998545\n",
      "Updated Weights A=68.05540540540541 B=68.90810276679842\n",
      "\n",
      "Selling 1 B at price 69.7\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.9\n",
      "Selling 1 B at price 69.9\n",
      "Selling 1 B at price 69.9\n",
      "Selling 1 B at price 69.9\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "New PNL : -17.69999999999709\n",
      "Updated Weights A=68.05540540540541 B=68.92312252964427\n",
      "\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "New PNL : -20.599999999998545\n",
      "Updated Weights A=68.05540540540541 B=68.93814229249011\n",
      "\n",
      "Selling 1 B at price 69.8\n",
      "Selling 1 B at price 69.8\n",
      "Buying 58 B at price 68.9 ****** Expect to sell at 68.94169960474308\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "New PNL : 290.99999999999636\n",
      "Updated Weights A=68.05540540540541 B=68.94007092198581\n",
      "\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "New PNL : -17.299999999999272\n",
      "Updated Weights A=68.05540540540541 B=68.94539007092197\n",
      "\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "New PNL : -17.600000000002183\n",
      "Updated Weights A=68.05540540540541 B=68.95017730496453\n",
      "\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "Selling 1 B at price 69.2\n",
      "New PNL : 38.10000000000218\n",
      "Updated Weights A=68.05540540540541 B=68.9549645390071\n",
      "\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.0\n",
      "Selling 1 B at price 69.10000000000001\n",
      "New PNL : 45.099999999998545\n",
      "Updated Weights A=68.05540540540541 B=68.95762411347519\n",
      "\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "New PNL : -41.20000000000073\n",
      "Updated Weights A=68.05540540540541 B=68.96081560283687\n",
      "\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.10000000000001\n",
      "Selling 1 B at price 69.0\n",
      "Buying 10 B at price 68.8 ****** Expect to sell at 68.96205673758867\n",
      "Buying 10 B at price 68.8 ****** Expect to sell at 68.95923344947737\n",
      "Buying 10 B at price 68.5 ****** Expect to sell at 68.95650684931506\n",
      "New PNL : 295.00000000000364\n",
      "Updated Weights A=68.05540540540541 B=68.94882154882156\n",
      "\n",
      "Buying 6 B at price 68.8 ****** Expect to sell at 68.94882154882156\n",
      "Buying 9 B at price 68.5 ****** Expect to sell at 68.94733333333332\n",
      "Buying 9 B at price 68.5 ****** Expect to sell at 68.9407224958949\n",
      "Buying 9 B at price 68.5 ****** Expect to sell at 68.93430420711975\n",
      "Buying 8 B at price 68.60000000000001 ****** Expect to sell at 68.9280701754386\n",
      "Buying 8 B at price 68.60000000000001 ****** Expect to sell at 68.92393700787402\n",
      "Buying 8 B at price 68.60000000000001 ****** Expect to sell at 68.9199066874028\n",
      "Buying 8 B at price 68.60000000000001 ****** Expect to sell at 68.91597542242704\n",
      "Buying 4 B at price 68.8 ****** Expect to sell at 68.91213960546283\n",
      "New PNL : -33.10000000000582\n",
      "Updated Weights A=68.05540540540541 B=68.91146304675716\n",
      "\n",
      "Buying 6 B at price 68.7 ****** Expect to sell at 68.91146304675716\n",
      "Buying 9 B at price 68.5 ****** Expect to sell at 68.90956651718983\n",
      "Buying 9 B at price 68.5 ****** Expect to sell at 68.90412979351034\n",
      "Buying 9 B at price 68.5 ****** Expect to sell at 68.89883551673945\n",
      "Buying 8 B at price 68.5 ****** Expect to sell at 68.89367816091955\n",
      "Buying 3 B at price 68.8 ****** Expect to sell at 68.88920454545456\n",
      "Buying 2 B at price 68.8 ****** Expect to sell at 68.88882602545971\n",
      "Buying 2 B at price 68.8 ****** Expect to sell at 68.8885754583921\n",
      "Buying 1 B at price 68.8 ****** Expect to sell at 68.88832630098453\n",
      "New PNL : -8.89999999999418\n",
      "Updated Weights A=68.05540540540541 B=68.88820224719102\n",
      "\n",
      "Buying 1 B at price 68.8 ****** Expect to sell at 68.88820224719102\n",
      "Buying 1 B at price 68.7 ****** Expect to sell at 68.88807854137448\n",
      "Buying 6 B at price 68.5 ****** Expect to sell at 68.88781512605043\n",
      "Buying 6 B at price 68.5 ****** Expect to sell at 68.88458333333334\n",
      "Buying 1 B at price 68.7 ****** Expect to sell at 68.88140495867769\n",
      "Buying 6 B at price 68.5 ****** Expect to sell at 68.88115543328749\n",
      "Buying 6 B at price 68.5 ****** Expect to sell at 68.8780354706685\n",
      "Buying 1 B at price 68.7 ****** Expect to sell at 68.87496617050068\n",
      "Buying 1 B at price 68.7 ****** Expect to sell at 68.87472972972974\n",
      "New PNL : 59.799999999995634\n",
      "Updated Weights A=68.05540540540541 B=68.8744939271255\n",
      "\n",
      "Buying 9 B at price 68.4 ****** Expect to sell at 68.8744939271255\n",
      "Buying 10 B at price 68.3 ****** Expect to sell at 68.86880000000001\n",
      "Buying 6 B at price 68.4 ****** Expect to sell at 68.8613157894737\n",
      "Buying 6 B at price 68.4 ****** Expect to sell at 68.85770234986946\n",
      "Buying 6 B at price 68.4 ****** Expect to sell at 68.85414507772022\n",
      "Buying 5 B at price 68.4 ****** Expect to sell at 68.85064267352186\n",
      "Buying 1 B at price 68.7 ****** Expect to sell at 68.8477650063857\n",
      "Buying 1 B at price 68.7 ****** Expect to sell at 68.84757653061226\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.84738853503185\n",
      "New PNL : 41.599999999998545\n",
      "Updated Weights A=68.05540540540541 B=68.8469465648855\n",
      "\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.8469465648855\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.84650571791614\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.84606598984772\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.84562737642587\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.84518987341772\n",
      "Buying 1 B at price 68.5 ****** Expect to sell at 68.84475347661188\n",
      "Buying 6 B at price 68.3 ****** Expect to sell at 68.84431818181818\n",
      "Buying 9 B at price 68.2 ****** Expect to sell at 68.84022556390978\n",
      "Buying 7 B at price 68.2 ****** Expect to sell at 68.83308550185873\n",
      "New PNL : 21.69999999999709\n",
      "Updated Weights A=68.05540540540541 B=68.82764127764128\n",
      "\n",
      "Buying  1 A at price 67.9\n",
      "Buying 7 B at price 68.10000000000001 ****** Expect to sell at 68.82764127764128\n",
      "Buying  1 A at price 68.0\n",
      "Buying 12 B at price 67.9 ****** Expect to sell at 68.82143727161997\n",
      "Buying  1 A at price 67.9\n",
      "Buying 10 B at price 67.9 ****** Expect to sell at 68.80816326530612\n",
      "Buying  1 A at price 67.9\n",
      "Buying 7 B at price 68.0 ****** Expect to sell at 68.79739027283512\n",
      "Buying  1 A at price 67.9\n",
      "Buying 9 B at price 67.9 ****** Expect to sell at 68.79082352941177\n",
      "Buying 9 B at price 67.9 ****** Expect to sell at 68.781490104773\n",
      "Buying  1 A at price 68.0\n",
      "Buying 6 B at price 68.0 ****** Expect to sell at 68.77235023041474\n",
      "Buying  1 A at price 68.0\n",
      "Buying 4 B at price 68.10000000000001 ****** Expect to sell at 68.76704805491993\n",
      "Buying  1 A at price 67.9\n",
      "Buying 6 B at price 68.0 ****** Expect to sell at 68.76400911161731\n",
      "Buying  1 A at price 67.9\n",
      "Buying 6 B at price 68.0 ****** Expect to sell at 68.75882352941177\n",
      "New PNL : -21.699999999989814\n",
      "Updated Weights A=68.02657342657342 B=68.75370786516854\n",
      "\n",
      "Buying  1 A at price 67.9\n",
      "Buying 6 B at price 68.0 ****** Expect to sell at 68.75370786516854\n",
      "Buying  1 A at price 67.9\n",
      "Buying 5 B at price 68.0 ****** Expect to sell at 68.74866071428572\n",
      "Buying  1 A at price 67.8\n",
      "Buying 7 B at price 67.9 ****** Expect to sell at 68.74450610432852\n",
      "Buying  1 A at price 67.8\n",
      "Buying 7 B at price 67.9 ****** Expect to sell at 68.73799559471367\n",
      "Buying  1 A at price 67.8\n",
      "Buying 8 B at price 67.8 ****** Expect to sell at 68.73158469945355\n",
      "Buying  1 A at price 67.8\n",
      "Buying 8 B at price 67.8 ****** Expect to sell at 68.72351029252438\n",
      "Buying  1 A at price 67.8\n",
      "Buying 6 B at price 67.9 ****** Expect to sell at 68.715574650913\n",
      "Buying  1 A at price 67.7\n",
      "Buying 9 B at price 67.7 ****** Expect to sell at 68.71035218783351\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying 9 B at price 67.7 ****** Expect to sell at 68.70073995771669\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying 8 B at price 67.7 ****** Expect to sell at 68.69130890052355\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  2 A at price 67.5\n",
      "Buying  2 A at price 67.5\n",
      "Buying  2 A at price 67.5\n",
      "Buying  2 A at price 67.5\n",
      "New PNL : 13.999999999996362\n",
      "Updated Weights A=67.91420765027321 B=68.68307372793353\n",
      "\n",
      "Buying  2 A at price 67.5\n",
      "Buying  2 A at price 67.5\n",
      "Buying  2 A at price 67.5\n",
      "Buying  1 A at price 67.5\n",
      "Buying  1 A at price 67.5\n",
      "Buying  1 A at price 67.5\n",
      "Buying  1 A at price 67.5\n",
      "Buying  1 A at price 67.5\n",
      "Buying  1 A at price 67.60000000000001\n",
      "New PNL : -36.29999999999927\n",
      "Updated Weights A=67.85779967159277 B=68.68307372793353\n",
      "\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "New PNL : 39.89999999999782\n",
      "Updated Weights A=67.82648809523809 B=68.68307372793353\n",
      "\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "New PNL : -34.90000000000509\n",
      "Updated Weights A=67.80517006802721 B=68.68307372793353\n",
      "\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "New PNL : 3.637978807091713e-12\n",
      "Updated Weights A=67.79185463659148 B=68.68307372793353\n",
      "\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.60000000000001\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "New PNL : 0.2999999999992724\n",
      "Updated Weights A=67.77816492450638 B=68.68307372793353\n",
      "\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "New PNL : 3.637978807091713e-12\n",
      "Updated Weights A=67.76926406926407 B=68.68307372793353\n",
      "\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n",
      "Buying  1 A at price 67.7\n"
     ]
    }
   ],
   "source": [
    "start_pnl = e.get_pnl()\n",
    "new_pnl = e.get_pnl()\n",
    "\n",
    "timer = 0\n",
    "#new_start_b = [average_b(20)]*10\n",
    "#weighted_prices_b = new_start_b\n",
    "\n",
    "while timer<2000:\n",
    "    stats_a = get_range_a(10000)\n",
    "    stats_b = get_range_b(10000)\n",
    "    \n",
    "    max_range_a = stats_a[0]-stats_a[1]\n",
    "    low_range_b = stats_b[1]-stats_b[2]\n",
    "    \n",
    "    book_a = e.get_last_price_book(philips_a)\n",
    "    book_b = e.get_last_price_book(philips_b)\n",
    "    \n",
    "    if len(book_a.asks)!=0 and len(book_a.bids)!=0:\n",
    "        current_ask_a = book_a.asks[0].price\n",
    "        current_bid_a = book_a.bids[0].price\n",
    "    if len(book_b.asks)!=0 and len(book_b.bids)!=0:\n",
    "        current_ask_b = book_b.asks[0].price\n",
    "        current_bid_b = book_b.bids[0].price\n",
    "    #print(current_ask)\n",
    "    \n",
    "    average = average_b(2000)\n",
    "    #print(average)\n",
    "    positions = e.get_positions_and_cash()\n",
    "    volume_left_a = positions[philips_a]['volume']\n",
    "    volume_left_b = positions[philips_b]['volume']\n",
    "    \n",
    "    if current_bid_a-np.mean(weighted_prices_a)>1.5:\n",
    "        \n",
    "    \n",
    "    # SELLING A WHEN HIGH\n",
    "    if current_bid_a>np.mean(weighted_prices_a) and volume_left_a>-200:\n",
    "        price = current_bid_a\n",
    "        volume = max(int(10*(current_bid_a-stats_a[1])/max_range_a),1)\n",
    "        buying_order = e.insert_order(philips_a, price=current_bid_a, volume=float(volume), side = 'ask', order_type = 'limit')\n",
    "        print('Selling %s A at price %s ****** Expect to buy at %s'%(volume, current_bid_a, np.mean(weighted_prices_a)))\n",
    "        bought_prices.append(price)\n",
    "        updated_weights = [price]*volume\n",
    "        weighted_prices_a = updated_weights + weighted_prices_a\n",
    "        time.sleep(1)\n",
    "        timer+=1\n",
    "        \n",
    "    \n",
    "    # BUYING A WHEN LOW\n",
    "    if current_ask_a<np.mean(weighted_prices_a) and volume_left_a<200:\n",
    "        sell_volume = min(int(10*(np.mean(weighted_prices_a)-current_ask_a)*max_range_a), np.abs(volume_left_a))\n",
    "        if sell_volume<1:\n",
    "            sell_volume = 1\n",
    "        selling_order = e.insert_order(philips_a, price=current_ask_a, volume=float(sell_volume), side='bid', order_type='limit')  \n",
    "        print('Buying  %s A at price %s'%(sell_volume, str(current_ask_a)))\n",
    "        updated_weights = [current_ask_a]*volume\n",
    "        weighted_prices_a =  weighted_prices_a[int(sell_volume):] + updated_weights\n",
    "        time.sleep(0.5)\n",
    "        timer +=1\n",
    "        \n",
    "    # BUYING B THEY LOW\n",
    "    if current_ask_b<np.mean(weighted_prices_b) and volume_left_b<200:\n",
    "        price = current_ask_b\n",
    "        volume = max(int(10*((stats_b[1]-current_ask_b)/low_range_b)),1)\n",
    "        buying_order = e.insert_order(philips_b, price=current_ask_b, volume=volume, side = 'bid', order_type = 'limit')\n",
    "        print('Buying %s B at price %s ****** Expect to sell at %s'%(volume, current_ask_b, np.mean(weighted_prices_b)))\n",
    "        bought_prices.append(price)\n",
    "        updated_weights = [price]*volume\n",
    "        weighted_prices_b = updated_weights + weighted_prices_b\n",
    "        time.sleep(1)\n",
    "        timer+=1\n",
    "        \n",
    "    \n",
    "    # SELLING B WHEN HIGH\n",
    "    if current_bid_b>np.mean(weighted_prices_b) and volume_left_b>-200:\n",
    "        sell_volume = min(int(10*(current_bid_b-np.mean(weighted_prices_b)*low_range_b)), volume_left_b)\n",
    "        if sell_volume<1:\n",
    "            sell_volume = 1\n",
    "        selling_order = e.insert_order(philips_b, price=current_bid_b, volume=sell_volume, side='ask', order_type='limit')  \n",
    "        print('Selling %s B at price %s'%(sell_volume, str(current_bid_b)))\n",
    "        updated_weights = [current_bid_a]*sell_volume\n",
    "        weighted_prices_b = weighted_prices_b[sell_volume:] + updated_weights \n",
    "        time.sleep(0.5)\n",
    "        timer +=1\n",
    "          \n",
    "    if timer%10==0:\n",
    "#         weighted_prices_a.append(average_a(5)-0.2)\n",
    "        weighted_prices_a =  weighted_prices_a\n",
    "        \n",
    "#         weighted_prices_b.append(average_b(5)+0.3)\n",
    "        weighted_prices_b = weighted_prices_b\n",
    "        print('New PNL : %s'%(str(e.get_pnl()-new_pnl)))\n",
    "        new_pnl = e.get_pnl()\n",
    "        print('Updated Weights A=%s B=%s'%(np.mean(weighted_prices_a), np.mean(weighted_prices_b)))\n",
    "        \n",
    "        print()\n",
    "        timer+=1\n",
    "    #time.sleep(0.01)\n",
    "    \n",
    "    \n",
    "end_pnl = e.get_pnl()\n",
    "\n",
    "print('Pnl of stategy = %s'%(str(end_pnl - start_pnl)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "graphic-divide",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Entered Selling Phase\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-92-f833a2eb67cc>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     32\u001b[0m             \u001b[0mcurrent_ask_b\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbook_b\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masks\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprice\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     33\u001b[0m             \u001b[0mcurrent_bid_b\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbook_b\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbids\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprice\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 34\u001b[0;31m         \u001b[0mpositions\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_positions_and_cash\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     35\u001b[0m         \u001b[0mvolume_left_a\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpositions\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mphilips_a\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'volume'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     36\u001b[0m         \u001b[0mvolume_left_b\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpositions\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mphilips_b\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'volume'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.6/site-packages/optibook/synchronous_client.py\u001b[0m in \u001b[0;36mget_positions_and_cash\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    192\u001b[0m         \u001b[0;32mand\u001b[0m \u001b[0mthe\u001b[0m \u001b[0mcash\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mthe\u001b[0m \u001b[0mcurrent\u001b[0m \u001b[0mcash\u001b[0m \u001b[0mposition\u001b[0m \u001b[0marising\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mprevious\u001b[0m \u001b[0mbuy\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0msell\u001b[0m \u001b[0mtrades\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mthe\u001b[0m \u001b[0minstrument\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    193\u001b[0m         \"\"\"\n\u001b[0;32m--> 194\u001b[0;31m         \u001b[0;32massert\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_connected\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"Cannot call function until connected. Call connect() first\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    195\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_e\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_positions_and_cash\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    196\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.6/site-packages/optibook/synchronous_client.py\u001b[0m in \u001b[0;36mis_connected\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     39\u001b[0m         \u001b[0mReturns\u001b[0m \u001b[0mwhether\u001b[0m \u001b[0mthe\u001b[0m \u001b[0mExchange\u001b[0m \u001b[0mClient\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mcurrently\u001b[0m \u001b[0mconnected\u001b[0m \u001b[0mto\u001b[0m \u001b[0mthe\u001b[0m \u001b[0mExchange\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m         \"\"\"\n\u001b[0;32m---> 41\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_wrapper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_connected\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     42\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     43\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mconnect\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0musername\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpassword\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0madmin_password\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.6/site-packages/optibook/synchronous_wrapper.py\u001b[0m in \u001b[0;36mis_connected\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mis_connected\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mbool\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 23\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mall\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_connected\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mcl\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_clients\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_loop\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_running\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     24\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mconnect\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.6/site-packages/optibook/synchronous_wrapper.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mis_connected\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mbool\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 23\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mall\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_connected\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mcl\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_clients\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_loop\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_running\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     24\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mconnect\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.6/site-packages/optibook/base_client.py\u001b[0m in \u001b[0;36mis_connected\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     73\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     74\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 75\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_socket\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetpeername\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     76\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mOSError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     77\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "start_pnl = e.get_pnl()\n",
    "\n",
    "timer = 0\n",
    "\n",
    "while timer<5:\n",
    "    book_a = e.get_last_price_book(philips_a)\n",
    "    book_b = e.get_last_price_book(philips_b)\n",
    "    \n",
    "    if len(book_a.asks)!=0 and len(book_a.bids)!=0:\n",
    "        current_ask_a = book_a.asks[0].price\n",
    "        current_bid_a = book_a.bids[0].price\n",
    "    if len(book_b.asks)!=0 and len(book_b.bids)!=0:\n",
    "        current_ask_b = book_b.asks[0].price\n",
    "        current_bid_b = book_b.bids[0].price\n",
    "        \n",
    "    b_buy_price = current_ask_b\n",
    "    a_buy_price = current_ask_a\n",
    "    \n",
    "    a_order = e.insert_order(philips_a, price=a_buy_price, volume=200, order_type='ioc', side='bid')\n",
    "    b_order = e.insert_order(philips_b, price=b_buy_price, volume=200, order_type='ioc', side='bid')\n",
    "    print('Entered Selling Phase')\n",
    "    sold = 0\n",
    "    while True:\n",
    "        \n",
    "        book_a = e.get_last_price_book(philips_a)\n",
    "        book_b = e.get_last_price_book(philips_b)\n",
    "    \n",
    "        if len(book_a.asks)!=0 and len(book_a.bids)!=0:\n",
    "            current_ask_a = book_a.asks[0].price\n",
    "            current_bid_a = book_a.bids[0].price\n",
    "        if len(book_b.asks)!=0 and len(book_b.bids)!=0:\n",
    "            current_ask_b = book_b.asks[0].price\n",
    "            current_bid_b = book_b.bids[0].price\n",
    "        positions = e.get_positions_and_cash()\n",
    "        volume_left_a = positions[philips_a]['volume']\n",
    "        volume_left_b = positions[philips_b]['volume']\n",
    "            \n",
    "        \n",
    "        if current_bid_a>a_buy_price+0.2 and volume_left_a>0:\n",
    "            a_order = e.insert_order(philips_a, price=current_bid_a, volume=volume_left_a, order_type='limit', side='ask')\n",
    "            sold +=1\n",
    "        if current_bid_b>b_buy_price+0.2 and volume_left_b>0:\n",
    "            a_order = e.insert_order(philips_b, price=current_bid_b, volume=volume_left_b, order_type='limit', side='ask')\n",
    "            sold += 1\n",
    "            \n",
    "        if sold==2:\n",
    "            print('A and B were both sold')\n",
    "            timer += 1\n",
    "            break\n",
    "            \n",
    "        \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "independent-password",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
